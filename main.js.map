{"version":3,"sources":["./src/app/header.service.ts","./src/app/studentservice.service.ts","./src/app/studentsignup.service.ts","./src/app/signup.service.ts","./src/app/stdlist/stdlist.component.ts","./src/app/stdlist/stdlist.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/token-interceptor.service.ts","./src/app/students/students.component.ts","./src/app/students/students.component.html","./src/environments/environment.ts","./src/app/employers/employers.component.ts","./src/app/employers/employers.component.html","./src/app/viewprofile/viewprofile.component.ts","./src/app/viewprofile/viewprofile.component.html","./src/app/update-employer/update-employer.component.ts","./src/app/update-employer/update-employer.component.html","./src/app/studentsignup/studentsignup.component.ts","./src/app/studentsignup/studentsignup.component.html","./src/app/stdreg/stdreg.component.ts","./src/app/stdreg/stdreg.component.html","./src/app/adminhome/adminhome.component.ts","./src/app/adminhome/adminhome.component.html","./src/app/stdform/stdform.component.ts","./src/app/stdform/stdform.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/stdform.service.ts","./src/app/editprofile/editprofile.component.ts","./src/app/editprofile/editprofile.component.html","./src/app/auth.service.ts","./src/app/studenthome/studenthome.component.ts","./src/app/studenthome/studenthome.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/studentlogin/studentlogin.component.ts","./src/app/studentlogin/studentlogin.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/navbar.service.ts","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/app/fee-payemt/fee-payemt.component.ts","./src/app/fee-payemt/fee-payemt.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/employer.service.ts","./src/app/auth.guard.ts","./src/app/search/search.component.ts","./src/app/stdhome/stdhome.component.ts","./src/app/stdhome/stdhome.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/update/update.component.ts","./src/app/update/update.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/newemployer/newemployer.component.ts","./src/app/newemployer/newemployer.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n  visible: boolean;\n  constructor() {this.visible = true; }\n  hide() { this.visible = false; }\n\n  show() { this.visible = true; }\n}\n","\nimport { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentserviceService {\n  std= {\n    fname:\"\",\n    age:\"\",\n    address:\"\",\n    district:\"\",\n    email:\"\",\n    phno:\"\",\n    dob:\"\",\n    gender:\"\",\n    quali:\"\",\n    poy:\"\",\n    skill:\"\",\n    wstatus:\"\",\n    techtrain:\"\",\n    year:\"\",\n    course:\"\",\n    photo:\"\"\n  };\n  constructor( private http:HttpClient) { }\n  server_address:string = '/api';\n  getStudent(id:any){\n    return this.http.get(`${this.server_address}/adminhome/students/`+id);\n  }\n  getStudents(){\n    return this.http.get(`${this.server_address}/adminhome/students`);\n  }\n\n\n  viewStudent(id:any){\n    return this.http.get(`${this.server_address}/adminhome/dashboard/stdlist/`+id);\n  }\n\n  viewStudents(){\n    return this.http.get(`${this.server_address}/adminhome/dashboard/stdlist`);\n  }\n  viewRegStudents(){\n    return this.http.get(`${this.server_address}/adminhome/dashboard/stdreg`);\n  }\n\n  deleteStudent(id:any)\n  {\n\n    return this.http.delete(`${this.server_address}/adminhome/students/remove/`+id)\n\n  }\n  removeStudent(id:any)\n  {\n    return this.http.delete(`${this.server_address}/adminhome/dashboard/stdlist/remove/`+id)\n  }\n  editStudent(student:any)\n  {\n    console.log('client update')\n    return this.http.put(`${this.server_address}/adminhome/students/update`,student)\n    .subscribe(data =>{console.log(data)})\n  }\n  approveStudent(student:any)\n  {\n    return this.http.post(`${this.server_address}/adminhome/dashboard/stdlist/student/approve`,student)\n    .subscribe(data =>{console.log(data)})\n  }\n\n  viewProfile(id:any){\n    return this.http.get(`${this.server_address}/studenthome/stdhome/`+id);\n  }\n\n  editprofile(student:any)\n  {\n    console.log('client update')\n    return this.http.put(`${this.server_address}/studenthome/stdhome/editprofile`,student)\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentsignupService {\n  user= {\n    username:'',\n    email:'',\n    password:''\n  }\n  constructor(private http:HttpClient,private router: Router) { }\n  server_address:string = '/api';\n  newUserData(user:any)\n  {   \n    // return this.http.post(`${this.server_address}/studentsignup/insert`,{\"item\":user})\n    return this.http.post(`${this.server_address}/studentsignup/insert`,{\"item\":user})\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  user= {\n    fname:'',\n    quali:'',\n    username:'',\n    email:'',\n    password:''\n  }\n\n  constructor(private http:HttpClient,private router: Router) { }\n  server_address:string = '/api';\n  newUserData(user:any)\n  {   \n    // return this.http.post(`${this.server_address}/studentsignup/insert`,{\"item\":user})\n    return this.http.post(`${this.server_address}/signup/insert`,{\"item\":user})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\nimport { StudentserviceService } from '../studentservice.service';\n\n@Component({\n  selector: 'app-stdlist',\n  templateUrl: './stdlist.component.html',\n  styleUrls: ['./stdlist.component.css']\n})\nexport class StdlistComponent implements OnInit {\n\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  }];\n\n  constructor(public _auth:AuthService, private studentService: StudentserviceService,\n    private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n\n  ngOnInit(): void {\n    this.studentService.viewStudents().subscribe((data:any)=>{\n    this.students=JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  viewStudent(student:any)\n  {\n    localStorage.setItem(\"viewStudentId\", student._id.toString());\n    this._router.navigate(['adminhome/dashboard/stdlist/student']);\n  }\n}\n","<!-- <h3>List of students waiting for aproval</h3> -->\n<div class='card'>\n    <h4>List of students waiting for aproval</h4>\n    <div class='card-body'>            \n      <div class='table-responsive'>\n        <table class='table'\n              *ngIf = 'students && students.length'>\n          <thead>\n            <tr>\n              <th></th>\n            </tr>\n           \n          </thead>\n          <tbody>  \n              <tr *ngFor='let student of students'>\n                  <td><button  (click)=\"viewStudent(student)\">{{ student.fname }}</button></td>\n              </tr>              \n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private _auth:AuthService,\n    private _router:Router,public header: HeaderService, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n    this.header.show();\n    this.nav.hide();\n  }\n\n}\n","<div class=\"bodycontent\">\n    <div class=\"main\">\n        <div class=\"title\">\n            <p>STUDENT ENROLLMENT SYSTEM</p>\n        </div>\n\n        <div class=\"content\">\n            <div class=\"leftcontent\">\n                <p>COURSES OFFERED</p>\n                \n                    <div class=\"card bg-secondary text-white \">\n                        <div class=\"card-body\">Certified Cyber Security Analyst</div>\n                      </div><br>\n                      <div class=\"card bg-secondary text-white\">\n                        <div class=\"card-body\">Certified Specialist in full Stack Development</div>\n                      </div><br>\n                      <div class=\"card bg-secondary text-white\">\n                        <div class=\"card-body\">Certified Specialist in Data Science and Analytics(NORKA)</div>\n                      </div><br>\n                      <div class=\"card bg-secondary text-white\">\n                        <div class=\"card-body\">Certified Specialist in Digital Marketing</div>\n                      </div><br>\n                      <div class=\"card bg-secondary text-white\">\n                        <div class=\"card-body\">Certified Specialist in Robotic Proces Automation</div>\n                      </div><br>\n                      <div class=\"card bg-secondary text-white\">\n                        <div class=\"card-body\">Certified Specialist in XR(NORKA)</div>\n                      </div>\n                \n            </div>\n            <div class=\"rightcontent\"> \n                <div class=\"container\">\n                    <div class=\"card\" style=\"width:260px\">\n                      <center><p>STUDENT LOGIN</p></center>\n                        <img class=\"card-img-top\" src=\"assets/images/student11.png\" alt=\"Card image\"\n                            style=\"width: 250px;height: 250px;\">\n                        <div class=\"card-body\">\n                            <center><a routerLink=\"studentlogin\" class=\"btn btn-secondary stretched-link\">Student login</a></center>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n\n  constructor(private injector:Injector) { }\n  intercept(req:any,nxt:any)\n  {\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone(\n      {\n        setHeaders:{\n          Authorization:`Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    return nxt.handle(tokenizedReq)\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentserviceService } from '../studentservice.service';\nimport { AuthService } from '../auth.service';\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  pageTitle: string = 'Student Details';\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n\n  students=[{\n    fname:'',\n    email:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    course:'',\n    photo:''}]\n  constructor(private router:Router,private studentService: StudentserviceService, public _auth:AuthService) { }\n\n  ngOnInit(): void {\n    this.studentService.getStudents().subscribe((data:any)=>{\n      this.students=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editStudent(student:any)\n  {\n    localStorage.setItem(\"editStudentId\", student._id.toString());\n    this.router.navigate(['/adminhome/students/update']);\n\n  }\n  deleteStudent(student:any)\n  {\n    this.studentService.deleteStudent(student._id)\n      .subscribe((data:any) => {\n        this.students = this.students.filter(s => s !== student);\n      })\n  \n\n  }\n}\n","<div class='card'>\n    <div class='card-header'>\n     <h1><b>{{pageTitle}}</b></h1>\n    </div>\n    \n    <div class='card-body'>            \n      <div class='table-responsive'>\n        <table class='table'\n              *ngIf = 'students && students.length'>\n          <thead>\n            <tr>\n              <th>Photo</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Highest Qualification</th>\n              <th>Pass Out Year</th>\n              <th>Skill Set</th>\n              <th>Course</th>\n            </tr>\n           \n          </thead>\n          <tbody>  \n              <tr *ngFor='let student of students'>\n                <td><img\n                  [src] = 'student.photo' \n                \n                  [style.width.px] = 'imageWidth' \n                  [style.margin.px] = 'imageMargin'></td>\n                  <td>{{ student.fname }}</td>\n                  <td>{{ student.email }}</td>\n                  <td>{{ student.quali }}</td>\n                  <td>{{student.poy}}</td>\n                  <td>{{student.skill}}</td>\n                  <td>{{student.course}}</td>\n                  \n                  <td>\n                    <!-- <button class=\"btn btn-primary\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" routerLink=\"\"  style=\"margin-left: 0px;\">More Details</button>&nbsp;&nbsp; -->\n                    \n                    <button class=\"btn btn-warning\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"editStudent(student)\">EDIT</button>&nbsp;&nbsp;\n\n                    <button class=\"btn btn-danger\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"deleteStudent(student)\" >DELETE</button><br>\n                  </td>\n                </tr>              \n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployerService } from '../employer.service';\n\n@Component({\n  selector: 'app-employers',\n  templateUrl: './employers.component.html',\n  styleUrls: ['./employers.component.css']\n})\nexport class EmployersComponent implements OnInit {\n  pageTitle: string = 'Employers List';\n  \n\n  employers=[{\n  \n    fname:'',\n    email:'',\n    quali:''\n    }]\n  \n  \n  constructor(private router:Router,private employerService: EmployerService){   \n    \n  }\n  ngOnInit(): void{\n    this.employerService.getEmployers().subscribe((data:any)=>{\n    this.employers=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editEmployer(employer:any)\n  {\n    localStorage.setItem(\"editEmployerId\", employer._id.toString());\n    this.router.navigate(['/adminhome/employers/update-employer']);\n\n  }\n  deleteEmployer(employer:any)\n  {\n    this.employerService.deleteEmployer(employer._id)\n      .subscribe((data:any) => {\n        this.employers = this.employers.filter(e => e !== employer);\n      })\n  \n\n  }\n}\n","<div class='card'>\n    <div class='card-header'>\n     <h1><b>{{pageTitle}}</b></h1>\n    </div>\n    \n    <div class='card-body'>            \n      <div class='table-responsive'>\n        <table class='table'\n              *ngIf = 'employers && employers.length'>\n          <thead>\n    \n            <!-- <button class=\"btn btn-primary\" style=\"cursor:pointer\" (click)=\"newUser()\" > Add</button>                     -->\n            <!-- <a class=\"add\" routerLink=\"newEmployer\" routerLinkActive=\"active\"><b>Add New User</b></a> -->\n            <tr>\n              \n\n              <th>Name</th>\n              <th>Email</th>\n              <th>Qualification</th>\n              \n            </tr>\n           \n          </thead>\n          <tbody>  \n              <tr *ngFor='let employer of employers'>\n                  \n                  <td>{{ employer.fname }}</td>\n                  <td>{{ employer.email }}</td>\n                  <td>{{ employer.quali }}</td>\n                  \n                \n                  <td>\n                    <button class=\"btn btn-warning\" style=\"cursor:pointer\"   (click)=\"editEmployer(employer)\" style=\"margin-left: 10px;\"> Edit</button>\n                    <button class=\"btn btn-secondary\" style=\"cursor:pointer\" (click)=\"deleteEmployer(employer)\"style=\"margin-left: 10px;\"> Delete</button>\n                  </td>\n                </tr>              \n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\nimport { StudentserviceService } from '../studentservice.service';\nimport { ActivatedRoute } from '@angular/router'; \n\n@Component({\n  selector: 'app-viewprofile',\n  templateUrl: './viewprofile.component.html',\n  styleUrls: ['./viewprofile.component.css']\n})\nexport class ViewprofileComponent implements OnInit {\n  student={\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:'',\n    value:''\n  };\n\n  pageTitle: string = 'STUDENT PROFILE';\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:'',\n    value:''}];\n\n    userId:any;\n\n    constructor(public _auth:AuthService, private studentService: StudentserviceService, private route: ActivatedRoute,\n      private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n  \n  \n      ngOnInit(){\n        this.userId = this._auth.getUserId(); \n        this.studentService.viewProfile(this.userId).subscribe((data:any)=>{\n        this.student=JSON.parse(JSON.stringify(data));\n        })\n    }\n     \n      \n  }\n","<div id=\"masthead\">  \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-7\">\n               <h1>{{pageTitle}}\n                 <p class=\"lead\"></p>\n               </h1>\n            </div>          \n          <div class=\"col-md-5\">\n            <div class=\"well well-lg\"> \n              <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  <div>\n                    <!-- <button class=\"btn btn-warning\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"approveStudent(student)\">Approve</button> &nbsp;&nbsp;\n                    <button class=\"btn btn-danger\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"removeStudent(student)\">Reject</button> -->\n                  </div>\n                  <br>  <br>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> \n  </div><!-- /cont -->\n  \n\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"top-spacer\"> </div>\n      </div>\n    </div> \n  </div><!-- /cont -->\n  \n</div>\n\n    \n  \n  \n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">         \n            <div class=\"panel\">\n                <div class=\"panel-body\">\n                    <div class=\"row\">    \n                       <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\">\n                            <img\n                            [src] = 'student.photo' \n                            [fname] = 'student.fname'\n                            [style.width.px] = 'imageWidth' \n                            [style.margin.px] = 'imageMargin'>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                           <b><p>Name : {{student.fname}}</p></b>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <p><span class=\"label label-default\">ID : {{student.value}}</span></p>\n                                    <p><span class=\"label label-default\">Age : {{student.age}}</span></p>\n                                    <p><span class=\"label label-default\">Address : {{student.address}}</span></p>\n                                    <p><span class=\"label label-default\">District : {{student.district}}</span></p>\n                                    <p><span class=\"label label-default\">Email : {{student.email}}</span></p>\n                                    <p><span class=\"label label-default\">Contact No.  : {{student.phno}}</span></p>\n                                    <p><span class=\"label label-default\">Date of birth : {{student.dob}}</span></p>\n                                    <p><span class=\"label label-default\">Educational Qualification : {{student.quali}}</span></p>\n                                    <p><span class=\"label label-default\">Pass out year : {{student.poy}}</span></p>\n                                    <p><span class=\"label label-default\">Skill : {{student.skill}}</span></p>\n                                    <p><span class=\"label label-default\">Working Status : {{student.wstatus}}</span></p>\n                                    <p><span class=\"label label-default\">Technical tarining : {{student.techtrain}}</span></p>\n                                    <p><span class=\"label label-default\">Course to join : {{student.course}}</span></p>\n                                </div>\n                                           <br><br>\n                            </div>\n                        </div>\n                        <hr>     \n                    </div>\n                </div>\n            </div><!--/col-12-->\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployerService } from '../employer.service';\n\n@Component({\n  selector: 'app-update-employer',\n  templateUrl: './update-employer.component.html',\n  styleUrls: ['./update-employer.component.css']\n})\nexport class UpdateEmployerComponent implements OnInit {\n  employerItem= {\n    fname:'',\n    email :'',\n    quali:'',\n  }\n \n  \nconstructor(private router:Router,private employeeService:EmployerService) { }\n\n  ngOnInit(): void {\n    let employerId = localStorage.getItem(\"editEmployerId\");\n    this.employeeService.getEmployer(employerId).subscribe((data:any)=>{\n      this.employerItem=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editEmployer()\n  {    \n    this.employeeService.editEmployer(this.employerItem);   \n    alert(\"Success\");\n    this.router.navigate(['/adminhome/employers']);\n  }\n\n}","<!--<div class='card'>\n    <form (ngSubmit)=\"editEmployee()\">\n<div class='card-header'>\n Edit Employee\n</div>\n<div class='card-body'>            \n  <div class='table-responsive'>\n    <table class='table'>       \n    \n      <tbody>  \n    \n              <tr>\n                <td><label>name</label></td>\n                <td><input type=\"text\" name=\"e_name\" [(ngModel)]=\"employeeItem.name\"/></td>                  \n              </tr>  \n              <tr>\n                <td> <label>email</label></td>\n                <td><input type=\"text\" name=\"e_email\" [(ngModel)]=\"employeeItem.email\"/></td>                  \n              </tr>  \n              <tr>\n                <td> <label>qualification</label></td>\n                <td><input type=\"text\" name=\"e_qualification\" [(ngModel)]=\"employeeItem.qualification\"/></td>                  \n              </tr>  \n            \n              <tr>\n                <td></td>\n                <td><input type=\"submit\" value=\"Submit\" /></td>                  \n              </tr>             \n      </tbody>\n    </table>\n  </div>\n</div>\n</form>\n</div>-->\n\n\n<div class=\"heading\" ><h2>Update Employer Details</h2></div><br>\n<div class=\"container bg-light\">\n    <div class=\"employerform\">\n    <form class=\"form col-md-12\"#useremployerform=\"ngForm\" (ngSubmit)=\"editEmployer()\"> \n        <div class=\"container\">\n            <div class=\"col\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"\">Name<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"fname\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"employerItem.fname\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\">Invalid Format</label>\n                        </div>\n                        <div class=\"form-group col-md-12\">\n                          <label for=\"inputEmail4\">Email<span style=\"color:red\">*</span></label>\n                          <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\"  #email=\"ngModel\" [(ngModel)]=\"employerItem.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" required>\n                          <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n                      </div>         \n                      <div class=\"form-group col-md-12\">\n                        <label for=\"\">Qualification<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"quali\" name=\"quali\"  #quali=\"ngModel\" [(ngModel)]=\"employerItem.quali\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid</label><br>\n                    </div> \n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"size:10vh;\" [disabled]=\"useremployerform.form.invalid\">Submit</button><br>\n                    \n                  \n                  </div>\n                  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { StudentsignupService } from '../studentsignup.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-studentsignup',\n  templateUrl: './studentsignup.component.html',\n  styleUrls: ['./studentsignup.component.css']\n})\nexport class StudentsignupComponent implements OnInit {\n\n  errormsg:any;\n  pwdstrength:any;\n  textcolor:any;\n\n  user= {\n    _id:\"\",\n    fname:'',\n    email:'',\n    password:'',\n    cpassword:''}\n\n  constructor(private _router: Router, private signupService: StudentsignupService, public header: HeaderService, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n    this.header.show();\n    this.nav.hide();\n  }\n  \n  validatepassword(){\n    var strongRegex = new RegExp(\"^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$\", \"g\");\n    var mediumRegex = new RegExp(\"^(?=.{6,})(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])(?=.*\\\\W))|((?=.*[a-z])(?=.*[0-9])(?=.*\\\\W))|((?=.*[A-Z])(?=.*[a-z])(?=.*\\\\W))).*$\", \"g\");\n    var enoughRegex = new RegExp(\"(?=.{3,}).*\", \"g\");\n\n    if(false == enoughRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Length:Too Short\",\n      this.textcolor=\"text-danger\"\n      \n    }\n    else if(strongRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Strength:Strong\",\n      this.textcolor=\"text-success\"\n    }\n    else if(mediumRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Strength:Medium\",\n      this.textcolor=\"text-warning\"\n    }\n    else{\n      this.pwdstrength=\"Password Strength:Poor\",\n      this.textcolor=\"text-danger\"\n    }\n\n  }\n\n\n  onSubmit(){ \n\n    if(this.user.cpassword==this.user.password){\n    \n      this.signupService.newUserData(this.user)\n      .subscribe(\n        // data =>{console.log(data)},\n        res =>{\n          alert('User form is valid!!')\n          this._router.navigate(['/studentlogin', {p1:this.user._id}]);\n        },\n  \n        err => {\n          alert(\"User already exists\");\n          this._router.navigate([\"/studentsignup\"]);\n        }\n      )\n      \n    }\n    else{\n      alert('User form is invalid!!, Confirm password does not match');\n    }\n  }\n}\n","\n<div class=\"login\">\n    <h2 class=\"login-header\">\n        Student Registration Form\n    </h2>\n    <form class=\"form col-md-6\" class=\"login-container\" #userlogin=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <p>\n            <input type=\"text\" name=\"fname\" class=\"form-control\" id=\"fname\" #username=\"ngModel\" [(ngModel)]=\"user.fname\" placeholder=\"Full Name\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required/>\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"username.touched && username.invalid\" >Invalid Username</label>\n        </p>\n        <p>\n            <input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" id=\"email\" [(ngModel)]=\"user.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" placeholder=\"email@example.com\"  required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n        </p>\n        <p>\n            <input type=\"password\" name=\"password\" (keyup)=\"validatepassword();\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" id=\"inputpassword\" placeholder=\"Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Invalid Password</label>\n            <label for=\"passworderror\"  class=\"{{textcolor}}\" id=\"passerror\">{{pwdstrength}}</label>\n        </p>\n        <p>\n            <input type=\"password\" name=\"cpassword\" class=\"form-control\" #cpassword=\"ngModel\" [(ngModel)]=\"user.cpassword\" id=\"cpassword\" placeholder=\"Confrim Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"cpassword.touched && cpassword.invalid\">Invalid Password</label>\n            <label for=\"confirm password error\"  class=\"text-danger\" >{{errormsg}}</label>\n        </p>\n        <p>\n            <center><button [disabled]=\"userlogin.form.invalid\">Submit</button></center>\n        </p>\n        <p>\n            <center><a routerLink=\"/studentlogin\">Already Registered</a></center>\n        </p>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\nimport { StudentserviceService } from '../studentservice.service';\n@Component({\n  selector: 'app-stdreg',\n  templateUrl: './stdreg.component.html',\n  styleUrls: ['./stdreg.component.css']\n})\nexport class StdregComponent implements OnInit {\n\n  students= [{\n    fname:'',\n    email:'',\n    password:'',\n    cpassword:''}]\n\n  constructor(private studentService: StudentserviceService,\n    private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n\n    ngOnInit(): void {\n      this.studentService.viewRegStudents().subscribe((data:any)=>{\n      this.students=JSON.parse(JSON.stringify(data));\n      })\n    }\n\n  }\n","<!-- <h3>List of students waiting for aproval</h3> -->\n<div class='card'>\n    <h4>List of students registered</h4>\n    <div class='card-body'>            \n      <div class='table-responsive'>\n        <table class='table'\n              *ngIf = 'students && students.length'>\n          <thead>\n            <tr>\n              <th></th>\n            </tr>\n           \n          </thead>\n          <tbody>  \n              <tr *ngFor='let student of students'>\n                  <td>{{ student.fname }}</td>\n              </tr>              \n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-adminhome',\n  templateUrl: './adminhome.component.html',\n  styleUrls: ['./adminhome.component.css']\n})\nexport class AdminhomeComponent implements OnInit {\n  title = 'AdminDashboard';\n  constructor(public _auth:AuthService,\n    private _router:Router,public header: HeaderService, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n    this.header.hide();\n    this.nav.show();\n  }\n\n}\n","<div class=\"main\">\n  <div class=\"left\">\n   <center><p> <img src=\"/assets/img/avatar.png\" alt=\"HelPic\" class=\"img-responsive\" width=\"50\" height=\"50\" class=\"rounded-circle\" style=\"opacity: .8\">\n    &nbsp;&nbsp;<span style=\"color: white;\">Welcome</span> <br><br></p></center>\n    \n\n    <nav class=\"mt-2\">\n      <ul  data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\" style=\"color: white;\">\n        <!-- Add icons to the links using the .nav-icon class\n             with font-awesome or any other icon font library -->\n        <li class=\"nav-item has-treeview menu-open\">\n          <a routerLink=\"dashboard\" class=\"nav-link active\">\n            <i class=\"nav-icon fas fa-tachometer-alt\"></i>\n            <p>\n              Dashboard\n              <!-- <i class=\"right fas fa-angle-left\"></i> -->\n            </p>\n          </a>\n          \n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"students\" class=\"nav-link\">\n            <i class=\"nav-icon fas fa-th\"></i>\n            <p>\n              Approved Students\n              <span class=\"right badge badge-danger\"></span>\n            </p>\n          </a>\n        </li>\n        <li class=\"nav-item has-treeview\" *ngIf=\"_auth.loggedIn()\">\n          <a routerLink=\"employers\" *ngIf=\"_auth.loggedIn()\" class=\"nav-link\">\n            <i class=\"nav-icon fas fa-copy\"></i>\n            <p>\n              Employers\n              <!-- <i class=\"fas fa-angle-left right\"></i> -->\n              <span class=\"badge badge-info right\"></span>\n            </p>\n          </a>\n          </li>\n        <li class=\"nav-item has-treeview\">\n          <a routerLink=\"search\" class=\"nav-link\">\n            <i class=\"nav-icon fas fa-chart-pie\"></i>\n            <p>\n              Search\n              <!-- <i class=\"right fas fa-angle-left\"></i> -->\n            </p>\n          </a>\n           </li>         \n      </ul>\n    </nav>\n\n  </div>\n\n  \n\n  <div class=\"right\">  \n         <router-outlet></router-outlet>\n  </div>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\n\n\n@Component({\n  selector: 'app-stdform',\n  templateUrl: './stdform.component.html',\n  styleUrls: ['./stdform.component.css']\n})\nexport class StdformComponent implements OnInit {\n\n  std={\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  };\n\n  constructor(private _auth:AuthService,\n    private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n\n  ngOnInit(): void {\n    this.nav.show();\n    this.header.hide();\n  }\n\n  proceed(){\n    this.stdform.newStudent(this.std)\n      .subscribe(\n        res =>{\n          alert('Waiting for approval!!')\n          this._router.navigate(['/studenthome/stdhome']);\n        },\n  \n        err => {\n          alert(\"Error in submitting form\");\n          this._router.navigate([\"/studenthome/stdform\"]);\n        }\n      )\n  }\n\n}\n","<div class=\"heading\"> Student Enrollment Form</div><br>\n<div class=\"container bg-light\">\n    <div class=\"studentform\">\n    <form class=\"form col-md-12\"#userenrollmentform=\"ngForm\" (ngSubmit)=\"proceed()\"> \n        <div class=\"container\">\n            <div class=\"col\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Full Name<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"fname\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"std.fname\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\">Invalid Format</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Age<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" name=\"age\" id=\"age\" #age=\"ngModel\" [(ngModel)]=\"std.age\" pattern=\"^\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"age.touched && age.invalid\" >Invalid Age</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputAddress\">Address<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\" #address=\"ngModel\" [(ngModel)]=\"std.address\" pattern=\"^[a-zA-Z0-9\\s,/'-]*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"address.touched && address.invalid\" >Invalid Address</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">District<span style=\"color:red\">*</span></label>\n                        <select id=\"district\" name= \"district\" class=\"form-control\" #district=\"ngModel\" [(ngModel)]=\"std.district\" required>\n                            <option selected>Choose</option>\n                            <option>Alappuzha</option>\n                            <option>Ernakulam</option>\n                            <option>Idukki</option>\n                            <option>Kannur</option>\n                            <option>Kasargod</option>\n                            <option>Kollam</option>\n                            <option>Kottayam</option>\n                            <option>Kozhikode</option>\n                            <option>Malappuram</option>\n                            <option>Palakkad</option>\n                            <option>Pathanamthitta</option>\n                            <option>Thiruvananthapuram</option>\n                            <option>Thrissur</option>\n                            <option>Wayanad</option>\n                        </select>\n                    </div>\n                </div><br>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputEmail4\">Email<span style=\"color:red\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" placeholder=\"enter your registered email-id\" #email=\"ngModel\" [(ngModel)]=\"std.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Mobile No:<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"phno\" name=\"phno\" #phno=\"ngModel\" [(ngModel)]=\"std.phno\" pattern=\"^([0-9]{3})[-. ]?([0-9]{3})[-. ]?([0-9]{4})$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"phno.touched && phno.invalid\" >Invalid Phone number</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Date of Birth<span style=\"color:red\">*</span></label>\n                        <input type=\"date\" class=\"form-control\" id=\"dob\" name=\"dob\" #dob=\"ngModel\" [(ngModel)]=\"std.dob\" required>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Gender<span style=\"color:red\">*</span></label>\n                        <select id=\"gender\" name=\"gender\" class=\"form-control\" #gender=\"ngModel\" [(ngModel)]=\"std.gender\" required>\n                            <option selected>Choose</option>\n                            <option>Male</option>\n                            <option>Female</option>\n                            <option>Other</option>\n                        </select>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Highest Qualification<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"quali\" name=\"quali\"  #quali=\"ngModel\" [(ngModel)]=\"std.quali\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Pass out Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"poy\" name=\"poy\"  #poy=\"ngModel\" [(ngModel)]=\"std.poy\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"poy.touched && poy.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Skill Set<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"skill\" name=\"skill\"  #skill=\"ngModel\" [(ngModel)]=\"std.skill\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"skill.touched && skill.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Employment Status<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"wstatus\" name=\"wstatus\"  #wstatus=\"ngModel\" [(ngModel)]=\"std.wstatus\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"wstatus.touched && wstatus.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Technology Training<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"techtrain\" name=\"techtrain\" #techtrain=\"ngModel\" [(ngModel)]=\"std.techtrain\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"techtrain.touched && techtrain.invalid\" >Invalid</label><br>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"year\" name=\"year\" #year=\"ngModel\" [(ngModel)]=\"std.year\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"year.touched && year.invalid\" >Invalid</label>\n                    </div>\n                    <br>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Course<span style=\"color:red\">*</span></label>\n                        <select id=\"course\" name= \"course\" class=\"form-control\" #course=\"ngModel\" [(ngModel)]=\"std.course\" required>\n                            <option selected>Choose</option>\n                            <option>Certified Cyber Security Analyst</option>\n                            <option>Certified Specialist in full Stack Development</option>\n                            <option>Certified Specialist in Data Science and Analytics(NORKA)</option>\n                            <option>Certified Specialist in Digital Marketing</option>\n                            <option>Certified Specialist in Robotic Proces Automation</option>\n                            <option>Certified Specialist in XR(NORKA)</option>\n                        </select>    \n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <label for=\"\">Photo<span style=\"color:red\">*</span></label>\n                    <input type=\"file\" name=\"photo\" id=\"photo\" #photo=\"ngModel\" [(ngModel)]=\"std.photo\" accept= \"image/*\" required>\n                </div><br>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userenrollmentform.form.invalid\">Proceed</button><br>\n            </div>\n        </div>\n    </form><br>\n</div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  pageTitle: string = 'Dashboard';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class='card'>\n  <div class='card-header'>\n   <h1><b>{{pageTitle}}</b></h1>\n  </div>\n<br><br>\n  <div class=\"container-fluid\">\n  <div class='card-body'>   \n    \n    <div class=\"row\">\n    <div class=\"col-lg-3 col-6\">\n    <div class=\"small-box bg-info\">\n      <div class=\"inner\">\n        <!-- <h3>100</h3> -->\n\n      <h4>New Enrollments</h4>\n      </div>\n      <div class=\"icon\">\n        <i class=\"ion ion-bag\"></i>\n      </div>\n      <a routerLink=\"stdlist\" class=\"small-box-footer\">More info <i class=\"fas fa-arrow-circle-right\"></i></a>\n    </div>\n    </div>\n   \n\n    \n      <div class=\"col-lg-4 col-6\">\n      <div class=\"small-box bg-info\">\n        <div class=\"inner\">\n          <!-- <h3>100</h3> -->\n  \n          <h4>Approved Students List</h4>\n        </div>\n        <div class=\"icon\">\n          <i class=\"ion ion-bag\"></i>\n        </div>\n        <a routerLink=\"/adminhome/students\" class=\"small-box-footer\">More info <i class=\"fas fa-arrow-circle-right\"></i></a>\n      </div>\n      </div>\n      \n\n      \n        <div class=\"col-lg-4 col-6\">\n        <div class=\"small-box bg-info\">\n          <div class=\"inner\">\n            <!-- <h3>100</h3> -->\n    \n            <h4>Registered Students</h4>\n          </div>\n          <div class=\"icon\">\n            <i class=\"ion ion-bag\"></i>\n          </div>\n          <a routerLink=\"stdreg\" class=\"small-box-footer\">More info <i class=\"fas fa-arrow-circle-right\"></i></a>\n        </div>\n        </div>\n        \n      </div>\n\n  </div>\n  </div>\n<br><br>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">\n        <i class=\"ion ion-clipboard mr-1\"></i>\n        To Do List\n      </h3>\n      <br><br>\n      <ul>\n        <li>Check the no. of student enrollments</li>\n        <li>Determine eligible and ineligible students</li>\n        <li>Approval and rejection of students can be done by admin only</li>\n        <li>Admin can determine the eligible employers</li>\n        <li>Let eligible student succeed</li>\n      </ul>\n      </div>\n      </div>\n\n\n</div>","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from './header.service';\nimport { NavbarService } from './navbar.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Student Enrollment System';\n  constructor(private _auth:AuthService,\n    private _router:Router,public header: HeaderService, public nav: NavbarService){}\n\n  ngOnInit(){\n    this.header.hide();\n    this.nav.hide();\n  }\n}\n","<app-header></app-header>\n<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { StudentloginComponent } from './studentlogin/studentlogin.component';\nimport { StudentsignupComponent } from './studentsignup/studentsignup.component';\nimport { StudenthomeComponent } from './studenthome/studenthome.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { AdminhomeComponent } from './adminhome/adminhome.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { StdformComponent } from './stdform/stdform.component';\nimport { ViewprofileComponent } from './viewprofile/viewprofile.component';\nimport { StdhomeComponent } from './stdhome/stdhome.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { StudentsComponent } from './students/students.component';\nimport { UpdateComponent } from './update/update.component';\nimport { StdlistComponent } from './stdlist/stdlist.component';\nimport { StudentComponent } from './student/student.component';\nimport { EmployersComponent } from './employers/employers.component';\nimport { NewemployerComponent } from './newemployer/newemployer.component';\nimport { UpdateEmployerComponent } from './update-employer/update-employer.component';\nimport { StdregComponent } from './stdreg/stdreg.component';\nimport { FeePayemtComponent } from './fee-payemt/fee-payemt.component';\nimport { SearchComponent } from './search/search.component';\nimport { EditprofileComponent } from './editprofile/editprofile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    StudentloginComponent,\n    StudentsignupComponent,\n    StudenthomeComponent,\n    SignupComponent,\n    LoginComponent,\n    AdminhomeComponent,\n    NavbarComponent,\n    StdformComponent,\n    ViewprofileComponent,\n    StdhomeComponent,\n    DashboardComponent,\n    StudentsComponent,\n    UpdateComponent,\n    StdlistComponent,\n    StudentComponent,\n    EmployersComponent,\n    NewemployerComponent,\n    UpdateEmployerComponent,\n    StdregComponent,\n    FeePayemtComponent,\n    SearchComponent,\n    EditprofileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n\n  providers: [AuthService,AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StdformService {\n\n  std={\n    fname:\"\",\n    age:\"\",\n    address:\"\",\n    district:\"\",\n    email:\"\",\n    phno:\"\",\n    dob:\"\",\n    gender:\"\",\n    quali:\"\",\n    poy:\"\",\n    skill:\"\",\n    wstatus:\"\",\n    techtrain:\"\",\n    year:\"\",\n    course:\"\",\n    photo:\"\"\n  };\n\n  constructor(private http:HttpClient,private router: Router) { }\n    server_address:string = '/api';\n    newStudent(std:any)\n    {   \n      // return this.http.post(`${this.server_address}/studentsignup/insert`,{\"item\":user})\n      return this.http.post(`${this.server_address}/stdform/insert`,{\"item\":std})\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\nimport { StudentserviceService } from '../studentservice.service';\nimport { ActivatedRoute } from '@angular/router'; \n\n@Component({\n  selector: 'app-editprofile',\n  templateUrl: './editprofile.component.html',\n  styleUrls: ['./editprofile.component.css']\n})\nexport class EditprofileComponent implements OnInit {\n  student={\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  };\n\n  pageTitle: string = 'STUDENT PROFILE';\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''}];\n\n    userId:any;\n    constructor(public _auth:AuthService, private studentService: StudentserviceService, private route: ActivatedRoute,\n      private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n  \n  \n      ngOnInit(){\n        let userId = this._auth.getUserId(); \n        this.studentService.viewProfile(userId).subscribe((data:any)=>{\n        this.student=JSON.parse(JSON.stringify(data));\n        })\n    }\n    editprofile()\n  {    \n    this.studentService.editprofile(this.student);   \n    alert(\"Success\");\n    this._router.navigate(['/studenthome/stdhome/viewprofile']);\n  }\n}\n","<div class=\"heading\"><h1>Edit Details</h1></div><br>\n<div class=\"container bg-light\">\n    <div class=\"studentform\">\n    <form class=\"form col-md-12\"#userenrollmentform=\"ngForm\" (ngSubmit)=\"editprofile()\"> \n        <div class=\"container\">\n            <div class=\"col\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Full Name<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"fname\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"student.fname\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\">Invalid Format</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Age<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" name=\"age\" id=\"age\" #age=\"ngModel\" [(ngModel)]=\"student.age\" pattern=\"^\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"age.touched && age.invalid\" >Invalid Age</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputAddress\">Address<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\" #address=\"ngModel\" [(ngModel)]=\"student.address\" pattern=\"^[a-zA-Z0-9\\s,/'-]*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"address.touched && address.invalid\" >Invalid Address</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">District<span style=\"color:red\">*</span></label>\n                        <select id=\"district\" name= \"district\" class=\"form-control\" #district=\"ngModel\" [(ngModel)]=\"student.district\" required>\n                            <option selected>Choose</option>\n                            <option>Alappuzha</option>\n                            <option>Ernakulam</option>\n                            <option>Idukki</option>\n                            <option>Kannur</option>\n                            <option>Kasargod</option>\n                            <option>Kollam</option>\n                            <option>Kottayam</option>\n                            <option>Kozhikode</option>\n                            <option>Malappuram</option>\n                            <option>Palakkad</option>\n                            <option>Pathanamthitta</option>\n                            <option>Thiruvananthapuram</option>\n                            <option>Thrissur</option>\n                            <option>Wayanad</option>\n                        </select>\n                    </div>\n                </div><br>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputEmail4\">Email<span style=\"color:red\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" placeholder=\"enter your registered email-id\" #email=\"ngModel\" [(ngModel)]=\"student.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Mobile No:<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"phno\" name=\"phno\" #phno=\"ngModel\" [(ngModel)]=\"student.phno\" pattern=\"^([0-9]{3})[-. ]?([0-9]{3})[-. ]?([0-9]{4})$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"phno.touched && phno.invalid\" >Invalid Phone number</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Date of Birth<span style=\"color:red\">*</span></label>\n                        <input type=\"date\" class=\"form-control\" id=\"dob\" name=\"dob\" #dob=\"ngModel\" [(ngModel)]=\"student.dob\" required>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Gender<span style=\"color:red\">*</span></label>\n                        <select id=\"gender\" name=\"gender\" class=\"form-control\" #gender=\"ngModel\" [(ngModel)]=\"student.gender\" required>\n                            <option selected>Choose</option>\n                            <option>Male</option>\n                            <option>Female</option>\n                            <option>Other</option>\n                        </select>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Highest Qualification<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"quali\" name=\"quali\"  #quali=\"ngModel\" [(ngModel)]=\"student.quali\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Pass out Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"poy\" name=\"poy\"  #poy=\"ngModel\" [(ngModel)]=\"student.poy\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"poy.touched && poy.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Skill Set<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"skill\" name=\"skill\"  #skill=\"ngModel\" [(ngModel)]=\"student.skill\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"skill.touched && skill.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Employment Status<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"wstatus\" name=\"wstatus\"  #wstatus=\"ngModel\" [(ngModel)]=\"student.wstatus\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"wstatus.touched && wstatus.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Technology Training<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"techtrain\" name=\"techtrain\" #techtrain=\"ngModel\" [(ngModel)]=\"student.techtrain\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"techtrain.touched && techtrain.invalid\" >Invalid</label><br>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"year\" name=\"year\" #year=\"ngModel\" [(ngModel)]=\"student.year\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"year.touched && year.invalid\" >Invalid</label>\n                    </div>\n                    <br>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Course<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"course\" name=\"course\" #course=\"ngModel\" [(ngModel)]=\"student.course\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"course.touched && course.invalid\" >Invalid Course</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <label for=\"\">Photo<span style=\"color:red\">*</span></label>\n                    <input type=\"file\" name=\"photo\" id=\"photo\" #photo=\"ngModel\" [(ngModel)]=\"student.photo\" accept= \"image/*\" required>\n                </div><br>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userenrollmentform.form.invalid\">Submit</button><br>\n            </div>\n        </div>\n    </form><br>\n</div>\n</div>\n\n\n\n","  import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class AuthService {\n\n  \n  // private _loginUrl = \"/api\";\n  private _loginUrl = \"/api/studentlogin\";\n  private _logUrl = \"/api/login\";\n\n  constructor(private http: HttpClient) { }\n\n\n  userLogin(user:any)\n  {\n    return this.http.post<{userId:string}>(this._loginUrl, user)\n  }\n\n  loginUser(user:any)\n  {\n    return this.http.post<any>(this._logUrl, user)\n  }\n\n  loggedIn()\n  {\n    return (!!localStorage.getItem('token'));\n  }\n \n  getToken()\n  {\n    return localStorage.getItem('token')\n  }\n  getUserId()\n  {\n    return localStorage.getItem('userId')\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StudentsignupService } from '../studentsignup.service';\nimport { StudentserviceService } from '../studentservice.service';\n\n@Component({\n  selector: 'app-studenthome',\n  templateUrl: './studenthome.component.html',\n  styleUrls: ['./studenthome.component.css']\n})\nexport class StudenthomeComponent implements OnInit {\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  }];\n  student={\n    _id:\"\",\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  };\nuserId:any;\n  constructor(private _auth:AuthService,\n    private _router:Router, public header: HeaderService,private studentService: StudentserviceService, public nav: NavbarService, private signupService: StudentsignupService) { }\n\n  ngOnInit(): void {\n    this.nav.show();\n    this.header.hide();\n  }\n \n  \n\n\n}\n","\n\n<div class=\"main\">\n       <div class=\"left\">\n        <center><p> <img src=\"/assets/img/avatar5.png\" alt=\"HelPic\" class=\"img-responsive\" width=\"50\" height=\"50\" class=\"rounded-circle\" style=\"opacity: .8\">\n         &nbsp;&nbsp;<span style=\"color: white;\">Welcome</span> <br><br></p></center>\n         \n     \n         <nav class=\"mt-2\">\n           <ul  data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\" style=\"color: white;\">\n             <!-- Add icons to the links using the .nav-icon class\n                  with font-awesome or any other icon font library -->\n             <li class=\"nav-item has-treeview menu-open\">\n               <a routerLink=\"stdhome\" class=\"nav-link active\">\n                 <i class=\"nav-icon fas fa-tachometer-alt\"></i>\n                 <p>\n                   Home\n                   <!-- <i class=\"right fas fa-angle-left\"></i> -->\n                 </p>\n               </a>\n               \n             </li>\n             <li class=\"nav-item\">\n               <a routerLink=\"stdhome/stdform\" class=\"nav-link\">\n                 <i class=\"nav-icon fas fa-th\"></i>\n                 <p>\n                   Enrollment Form\n                   <span class=\"right badge badge-danger\"></span>\n                 </p>\n               </a>\n             </li>\n\n               <li class=\"nav-item has-treeview\">\n                <a routerLink=\"stdhome/fee-payment\" class=\"nav-link\">\n                  <i class=\"nav-icon fas fa-copy\"></i>\n                  <p>\n                    Fee Payment\n                    <!-- <i class=\"fas fa-angle-left right\"></i> -->\n                    <span class=\"badge badge-info right\"></span>\n                  </p>\n                </a>\n                </li>\n              \n           </ul>\n         </nav>\n     \n       </div>\n     \n       \n     \n       <div class=\"right\">  \n              <router-outlet></router-outlet>\n       </div>\n     \n     </div>\n     \n     \n     \n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router'\nimport { HeaderService } from '../header.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public _auth:AuthService, private _router:Router, public header: HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div *ngIf=\"header.visible\" class=\"navbar navbar-expand-md \">\n    <div class=\"container\">\n        <!-- <a class=\"navbar-brand\" href=\"home.html\"> -->\n            <img src=\"assets/images/download.png\" alt=\"\" width=\"50px\" height=\"50px\" class=\"d-inline-block align-text-top\"> &nbsp;&nbsp;&nbsp;\n            <h2>ICT Academy of Kerala</h2>\n        <!-- </a> -->\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\" style=\"margin-left: 40vw;\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\"><a routerLink=\"/\" routerLinkActive=\"active\">Home</a></li>\n                <li class=\"nav-item\" style=\"float:right\"><a routerLink=\"/login\" routerLinkActive=\"active\">Login</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StudentserviceService } from '../studentservice.service';\n\n@Component({\n  selector: 'app-studentlogin',\n  templateUrl: './studentlogin.component.html',\n  styleUrls: ['./studentlogin.component.css']\n})\nexport class StudentloginComponent implements OnInit {\n  userId:string='';\n  user={\n    email:\"\",\n    password:\"\"\n  };\n  constructor(private _auth: AuthService, private studentService: StudentserviceService,private _router:Router,public header: HeaderService, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n    this.header.show();\n    this.nav.hide();\n\n  }\n\n  userLogin () {\n    \n    this._auth.userLogin(this.user)\n    .subscribe(\n      res => {\n          alert(\"sucessfully logged in \" +this.user.email)\n          // this.userId = res.userId;\n          localStorage.setItem('userId',res.userId)\n          // localStorage.setItem(\"viewStudentId\", this.user._id.toString()); \n          this._router.navigate(['/studenthome/stdhome']);\n      },\n      err => {\n        console.log(err);\n        alert('Invalid login credentials')\n        this._router.navigate(['/studentlogin'])\n      }\n    ) \n  }\n}\n","<div class=\"login\">\n    <h2 class=\"login-header\">\n        Student Login\n    </h2>\n    <form class=\"form col-md-6\" class=\"login-container\" #userlogin=\"ngForm\" (ngSubmit)=\"userLogin()\">\n        <p>\n            <input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" id=\"email\" [(ngModel)]=\"user.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" placeholder=\"email@example.com\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label><br>\n        </p>\n        <p>\n            <input type=\"password\" name=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" id=\"inputpassword\" placeholder=\"Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Invalid Password</label><br>\n        </p>\n        <p>\n            <center><button [disabled]=\"userlogin.form.invalid\">Submit</button></center>\n        </p>\n        <p>\n            <center><a routerLink=\"/studentsignup\">New Registration</a></center>\n        </p>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <div class=\"footcontent\">\n        <div class=\"footdivision\">\n            <div class=\"head1\">HEAD OFFICE</div>\n            <div class=\"headcontent\">ICT Academy of Kerala\n                L-9, Thejaswini Building\n                Technopark campus\n                Karyavattom-695581\n            </div>\n        </div>\n        <div class=\"footdivision\">\n            <div class=\"head1\">CENTRAL REGION</div>\n            <div class=\"headcontent\">\n                Ground Floor,Rajamally Building,\n                Infopark, Koratty,\n                Thrissur, Kerala, India.\n                Phone: +91-481-2731050</div>\n        </div>\n        <div class=\"footdivision\">\n            <div class=\"head1\">NORTH REGION</div>\n            <div class=\"headcontent\">\n                Floor,\n                Ul Cyberpark Building,\n                Nellikode PO,\n                Kozhikode,\n                Phone: +91-495-2431432\n            </div>\n        </div>\n        <div class=\"footdivision\">\n            <div class=\"head1\">SUPPORT</div>\n            <div class=\"headcontent\">\n                For more details Contact us @ info@ictkerala.org\n                OR reach us at 0471-2700811/12/13\n            </div>\n        </div>\n        <div class=\"footdivision\">\n            <div class=\"head1\">ABOUT US</div>\n            <div class=\"headcontent\">\n                ICT Academy of Kerala is a Social Enterprise created in a Public Private Partnership model (PPP) for\n                imparting ICT skills to the youths of Kerala and improve their employability opportunities in the\n                Industry. The Company is supported by Govt. of India , partnered by Govt. of Kerala and the IT\n                industry.\n            </div>\n        </div>\n    </div>\n\n</div>\n<div class=\"footerlogo\">\n    <div class=\"container\">\n        <div class=\"logo\">\n            <img src=\"assets/images/download.png\" alt=\"\" width=\"50px\" height=\"50px\">\n        </div>\n        <div class=\"socialmedia\">\n            <img src=\"assets/images/facebook.png\" alt=\"\">\n            <img src=\"assets/images/twitter.png\" alt=\"\">\n            <img src=\"assets/images/instagram.png\" alt=\"\">\n            <img src=\"assets/images/google.png\" alt=\"\">\n        </div>\n    </div>\n</div>\n<div class=\"copyright\">\n    <div class=\"copylogo\">Copyright <img src=\"assets/images/copyright.png\" alt=\"\"> 2020 ICT Academy of Kerala. All Rights\n        Reserved</div>\n\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n  visible: boolean;\n  constructor() {this.visible = false; }\n  hide() { this.visible = false; }\n\n  show() { this.visible = true; }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\nimport { StdformService } from '../stdform.service';\nimport { StudentserviceService } from '../studentservice.service';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  student={\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''\n  };\n\n  pageTitle: string = 'STUDENT DETAILS';\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''}]\n\n  constructor(public _auth:AuthService, private studentService: StudentserviceService,\n    private _router:Router, public header: HeaderService, public nav: NavbarService, public stdform:StdformService) { }\n\n\n    ngOnInit(): void {\n      let studentId = localStorage.getItem(\"viewStudentId\");\n      this.studentService.viewStudent(studentId).subscribe((data)=>{\n      this.student=JSON.parse(JSON.stringify(data));\n    })\n    }\n    approveStudent(student:any)\n    {    \n    this.studentService.approveStudent(this.student);   \n    alert(\"Success\");\n    this._router.navigate(['/adminhome/dashboard/stdlist']);\n    }\n\n    removeStudent(student:any)\n    {\n      this.studentService.removeStudent(student._id)\n      .subscribe((data:any) => {\n      this.students = this.students.filter(s => s !== student);\n      this._router.navigate([\"/adminhome/dashboard/stdlist\"])\n    })\n  }\n}","<div id=\"masthead\">  \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-7\">\n               <h1>{{pageTitle}}\n                 <p class=\"lead\"></p>\n               </h1>\n            </div>          \n          <div class=\"col-md-5\">\n            <div class=\"well well-lg\"> \n              <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  <div>\n                    <button class=\"btn btn-warning\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"approveStudent(student)\">Approve</button> &nbsp;&nbsp;\n                    <button class=\"btn btn-danger\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"removeStudent(student)\">Reject</button>\n                  </div>\n                  <br>  <br>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> \n  </div><!-- /cont -->\n  \n\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"top-spacer\"> </div>\n      </div>\n    </div> \n  </div><!-- /cont -->\n  \n</div>\n\n    \n  \n  \n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">         \n            <div class=\"panel\">\n                <div class=\"panel-body\">\n                    <div class=\"row\">    \n                       <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\">\n                            <img\n                            [src] = 'student.photo' \n                            [fname] = 'student.fname'\n                            [style.width.px] = 'imageWidth' \n                            [style.margin.px] = 'imageMargin'>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                           <b><p>Name : {{student.fname}}</p></b>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <p><span class=\"label label-default\">Age : {{student.age}}</span></p>\n                                    <p><span class=\"label label-default\">Address : {{student.address}}</span></p>\n                                    <p><span class=\"label label-default\">District : {{student.district}}</span></p>\n                                    <p><span class=\"label label-default\">Email : {{student.email}}</span></p>\n                                    <p><span class=\"label label-default\">Contact No.  : {{student.phno}}</span></p>\n                                    <p><span class=\"label label-default\">Date of birth : {{student.dob}}</span></p>\n                                    <p><span class=\"label label-default\">Educational Qualification : {{student.quali}}</span></p>\n                                    <p><span class=\"label label-default\">Pass out year : {{student.poy}}</span></p>\n                                    <p><span class=\"label label-default\">Skill : {{student.skill}}</span></p>\n                                    <p><span class=\"label label-default\">Working Status : {{student.wstatus}}</span></p>\n                                    <p><span class=\"label label-default\">Technical tarining : {{student.techtrain}}</span></p>\n                                    <p><span class=\"label label-default\">Course to join : {{student.course}}</span></p>\n                                </div>\n                                           <br><br>\n                            </div>\n                        </div>\n                        <hr>     \n                    </div>\n                </div>\n            </div><!--/col-12-->\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fee-payemt',\n  templateUrl: './fee-payemt.component.html',\n  styleUrls: ['./fee-payemt.component.css']\n})\nexport class FeePayemtComponent implements OnInit {\n\n  constructor() { }\n  handler:any = null;\n  ngOnInit(): void {\n    this.loadStripe();\n  }\n  pay(amount:any) {    \n \n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_aeUUjYYcx4XNfKVW60pmHTtI',\n      locale: 'auto',\n      token: function (token: any) {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n        console.log(token)\n        alert('Payment Successful!!');\n      }\n    });\n \n    handler.open({\n      name: 'Stripe Payment',\n      description: '',\n      amount: amount * 1000\n    });\n \n  }\n \n  loadStripe() {\n    if(!window.document.getElementById('stripe-script')) {\n      var s = window.document.createElement(\"script\");\n      s.id = \"stripe-script\";\n      s.type = \"text/javascript\";\n      s.src = \"https://checkout.stripe.com/checkout.js\";\n      s.onload = () => {\n        this.handler = (<any>window).StripeCheckout.configure({\n          key: 'pk_test_aeUUjYYcx4XNfKVW60pmHTtI',\n          locale: 'auto',\n          token: function (token: any) {\n            // You can access the token ID with `token.id`.\n            // Get the token ID to your server-side code for use.\n            console.log(token)\n            alert('Payment Success!!');\n          }\n        });\n      }\n      window.document.body.appendChild(s);\n    }\n  }\n}   \n      \n\n","\n<div class=\"container bg-light\"><br>\n    <div class=\"heading\"> Please Do The Payment !!</div><br>   \n      <form>\n          <div class=\"container\">\n              <div class=\"col\">\n                  <div class=\"row\">\n                      <div class=\"form-group col-md-6\">\n                          <label for=\"\">Full Name<span style=\"color:red\">*</span></label>\n                          <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"Enter your name\" required>\n                      </div><br>\n                      <div class=\"form-group col-md-6\">\n                          <label for=\"\">Amount<span style=\"color:red\">*</span></label>\n                          <input type=\"number\" class=\"form-control\" id=\"\" placeholder=\"Enter the amount\" required>\n                      </div>\n                  </div><br>\n                  \n                  <button type=\"submit\" (click)=\"pay(2100)\" class=\"btn btn-primary\">PAY</button>\n  </div>\n  </div>\n      </form>\n  </div>\n  \n  \n  \n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private _router:Router, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n  }\n\n  logoutUser()\n  {\n  localStorage.removeItem('token')\n  localStorage.removeItem('user');\n  this._router.navigate(['/'])\n  }\n}\n","<nav *ngIf=\"nav.visible\" class=\"navbar navbar-expand-md \">\n    <div class=\"container\">\n        <!-- <a class=\"navbar-brand\" href=\"home.html\"> -->\n            <img src=\"assets/images/download.png\" alt=\"\" width=\"50px\" height=\"50px\" class=\"d-inline-block align-text-top\"> &nbsp;&nbsp;&nbsp;\n            \n            <h2>ICT Academy of Kerala</h2>\n            <!-- </a> -->\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\" style=\"margin-left: 45vw;\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\" style=\"float:right\"><a routerLink=\"/home\" (click)=\"logoutUser()\" routerLinkActive=\"active\">Logout</a></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n\n","import { Component, OnInit, Output ,EventEmitter} from '@angular/core';\nimport { SignupService } from '../signup.service';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  @Output() tableDataValues=new EventEmitter<string>();\n\n  errormsg:any;\n  pwdstrength:any;\n  textcolor:any;\n\n  user= {\n    fname:'',\n    quali:'',\n    username:'',\n    email:'',\n    password:'',\n    cpassword:''}\n\n  constructor(private _router: Router,public header: HeaderService, public nav: NavbarService, private signupService: SignupService) { }\n\n  ngOnInit(): void {\n    this.header.show();\n    this.nav.hide();\n  }\n  validatepassword(){\n    var strongRegex = new RegExp(\"^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$\", \"g\");\n    var mediumRegex = new RegExp(\"^(?=.{6,})(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])(?=.*\\\\W))|((?=.*[a-z])(?=.*[0-9])(?=.*\\\\W))|((?=.*[A-Z])(?=.*[a-z])(?=.*\\\\W))).*$\", \"g\");\n    var enoughRegex = new RegExp(\"(?=.{3,}).*\", \"g\");\n\n    if(false == enoughRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Length:Too Short\",\n      this.textcolor=\"text-danger\"\n      \n    }\n    else if(strongRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Strength:Strong\",\n      this.textcolor=\"text-success\"\n    }\n    else if(mediumRegex.test(this.user.password)){\n      this.pwdstrength=\"Password Strength:Medium\",\n      this.textcolor=\"text-warning\"\n    }\n    else{\n      this.pwdstrength=\"Password Strength:Poor\",\n      this.textcolor=\"text-danger\"\n    }\n\n  }\n\n  onSubmit(){ \n\n    if(this.user.cpassword==this.user.password){\n    \n      this.signupService.newUserData(this.user)\n      .subscribe(\n        // data =>{console.log(data)},\n        res =>{\n          this.tableDataValues.emit(this.user.username)\n          this._router.navigate(['/login']);\n        },\n  \n        err => {\n          this._router.navigate([\"signup\"]);\n          alert(\"User already exists\");\n        }\n      )\n      \n    }\n    else{\n      alert('User form is invalid!!, Confirm password does not match');\n    }\n  }\n\n}\n","\n<div class=\"login\">\n    <h2 class=\"login-header\">\n        Employer Registration Form\n    </h2>\n    <form class=\"form col-md-6\" class=\"login-container\" #userlogin=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <p>\n            <input type=\"text\" name=\"fname\" class=\"form-control\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"user.fname\" placeholder=\"Full Name\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required/>\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\" >Invalid Full Name</label>\n        </p>\n        <p>\n            <input type=\"text\" name=\"quali\" class=\"form-control\" id=\"quali\" #quali=\"ngModel\" [(ngModel)]=\"user.quali\" placeholder=\"Highest Qualification\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required/>\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid Field</label>\n        </p>\n        <p>\n            <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" #username=\"ngModel\" [(ngModel)]=\"user.username\" placeholder=\"Username\" pattern=\"^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}\" required/>\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"username.touched && username.invalid\" >Invalid Username</label>\n        </p>\n        <p>\n            <input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" id=\"email\" [(ngModel)]=\"user.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" placeholder=\"email@example.com\"  required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n        </p>\n        <p>\n            <input type=\"password\" name=\"password\" (keyup)=\"validatepassword();\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" id=\"inputpassword\" placeholder=\"Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Invalid Password</label>\n            <label for=\"passworderror\"  class=\"{{textcolor}}\" id=\"passerror\">{{pwdstrength}}</label>\n        </p>\n        <p>\n            <input type=\"password\" name=\"cpassword\" class=\"form-control\" #cpassword=\"ngModel\" [(ngModel)]=\"user.cpassword\" id=\"cpassword\" placeholder=\"Confrim Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"cpassword.touched && cpassword.invalid\">Invalid Password</label>\n            <label for=\"confirm password error\"  class=\"text-danger\" >{{errormsg}}</label>\n        </p>\n        <p>\n            <center><button [disabled]=\"userlogin.form.invalid\">Submit</button></center>\n        </p>\n        <p>\n            <center><a routerLink=\"/login\">Already Registered</a></center>\n        </p>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployerService {\n  item= {\n    name:'',\n    email:'',\n    qualification:'',\n    }\n  constructor( private http:HttpClient) { }\n  server_address:string = '/api';\n  getEmployer(id:any){\n    return this.http.get(`${this.server_address}/adminhome/employers/` +id);\n    \n  }\n  getEmployers(){\n    return this.http.get(`${this.server_address}/adminhome/employers`);\n  }\n\n  newEmployer(item:any)\n  {   \n    return this.http.post(`${this.server_address}/adminhome/employers/newEmployer/insert`,{\"employer\":item})\n    .subscribe(data =>{console.log(data)})\n  }\n  \n  deleteEmployer(id:any)\n  {\n\n    return this.http.delete(`${this.server_address}/adminhome/employers/remove/`+id)\n\n  }\n  editEmployer(employer:any)\n  {\n    console.log('client update')\n    return this.http.put(`${this.server_address}`,employer)\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate,Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _auth:AuthService,private _router:Router)\n  {\n\n  }\n  canActivate():boolean{\n    if (this._auth.loggedIn())\n    {\n      console.log('true')\n      return true\n\n    }\n    else{\n      this._router.navigate(['/adminhome'])\n      return false\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentserviceService } from '../studentservice.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-stdhome',\n  templateUrl: './stdhome.component.html',\n  styleUrls: ['./stdhome.component.css']\n})\nexport class StdhomeComponent implements OnInit {\n\n  student={\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:'',\n    value:''\n  };\n  students=[{\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:'',\n    value:''\n  }];\n  userId:any;\n  constructor(public _auth:AuthService,private _router:Router,private route: ActivatedRoute,private studentService: StudentserviceService) { }\n\n  ngOnInit(): void {\n    // let userId = this._auth.getUserId(); \n    // this.studentService.getStudent(userId).subscribe((data:any)=>{\n    // this.student=JSON.parse(JSON.stringify(data));\n    // })\n    this.studentService.viewStudents().subscribe((data:any)=>{\n    this.students=JSON.parse(JSON.stringify(data));\n  })\n  }\n\n\nviewprofile(student:any)\n  {\n    localStorage.setItem(\"getStudentId\", this.userId);\n    this._router.navigate(['studenthome/stdhome/viewprofile']);\n  }\n\n editprofile(student:any)\n  {\n    localStorage.setItem(\"getStudentId\", this.userId);\n    this._router.navigate(['studenthome/stdhome/editprofile']);\n  }\n\n}\n","<div class=\"heading\">\n<center> <h3>WELCOME TO ICTAK</h3> </center>\n</div>\n<div >\n<p>\n    \"ICT Academy is an initiative of the Government of India in collaboration with the state Governments and Industries. ICT Academy is a not-for-profit society, the first of its kind pioneer venture under the Public-Private-Partnership (PPP) model that endeavours to train the higher education teachers and students thereby exercises on developing the next generation teachers and industry ready students.ICT Academy was started to meet the skill requirements of the industry and generate more employment especially in tier 2 and 3 towns, the rural parts of the country. The organization was formed with representations from the State Government of Tamil Nadu, leading companies in the ICT industry and National Association of Software Services Companies (NASSCOM) in India\".\n    <br><br><br>\n    <center><button type=\"button\" class=\"btn btn-primary\" (click)=\"viewprofile(student)\">View Profile</button>\n        &nbsp; &nbsp;&nbsp; &nbsp;<button type=\"button\" class=\"btn btn-primary\" (click)=\"editprofile(student)\">Edit Profile</button></center>\n</p>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { StudentloginComponent } from './studentlogin/studentlogin.component';\nimport { StudentsignupComponent } from './studentsignup/studentsignup.component';\nimport { StudenthomeComponent } from './studenthome/studenthome.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdminhomeComponent } from './adminhome/adminhome.component';\nimport { StdformComponent } from './stdform/stdform.component';\nimport { StdhomeComponent } from './stdhome/stdhome.component';\nimport { ViewprofileComponent } from './viewprofile/viewprofile.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { StudentsComponent } from './students/students.component';\nimport { UpdateComponent } from './update/update.component';\nimport { StdlistComponent } from './stdlist/stdlist.component';\nimport { StudentComponent } from './student/student.component';\nimport { EmployersComponent } from './employers/employers.component';\nimport { UpdateEmployerComponent } from './update-employer/update-employer.component';\nimport { NewemployerComponent } from './newemployer/newemployer.component';\nimport { StdregComponent } from './stdreg/stdreg.component';\nimport { FeePayemtComponent } from './fee-payemt/fee-payemt.component';\nimport { SearchComponent } from './search/search.component';\nimport { EditprofileComponent } from './editprofile/editprofile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'studentlogin',\n    component: StudentloginComponent\n  },\n  {\n    path: 'studentsignup',\n    component: StudentsignupComponent\n  },\n  {\n    path: 'studenthome',\n    component: StudenthomeComponent,\n    children: [\n      {path: 'stdhome', component:StdhomeComponent},\n      {path: 'viewprofile', component:ViewprofileComponent},\n      {path: 'stdhome/stdform', component:StdformComponent},\n      {path: 'stdhome/viewprofile', component:ViewprofileComponent},\n      {path: 'stdhome/editprofile', component:EditprofileComponent},\n      {path: 'stdhome/fee-payment', component:FeePayemtComponent}\n    ]\n  },\n  {\n    path: 'login',\n    component: LoginComponent \n  },\n  {\n    path: 'signup',\n    component: SignupComponent \n  },\n  {\n    path: 'adminhome',\n    component: AdminhomeComponent,\n    children: [\n      {path: 'dashboard', component:DashboardComponent},\n      {path: 'dashboard/stdlist', component:StdlistComponent},\n      {path: 'dashboard/stdlist/student', component:StudentComponent},\n      {path: 'dashboard/stdreg', component:StdregComponent},\n      {path: 'students', component:StudentsComponent},  \n      {path: 'students/update',canActivate: [AuthGuard], component:UpdateComponent},\n      {path: 'employers', canActivate: [AuthGuard],component:EmployersComponent},\n      {path: 'employers/update-employer', canActivate: [AuthGuard],component:UpdateEmployerComponent},\n      {path: 'employers/newEmployer',canActivate: [AuthGuard], component:NewemployerComponent},\n      {path: 'search', component:SearchComponent}\n    ]\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '../header.service';\nimport { NavbarService } from '../navbar.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user={\n    email:\"\",\n    password:\"\"\n  };\n  constructor(private _auth: AuthService, private _router:Router,public header: HeaderService, public nav: NavbarService) { }\n\n  ngOnInit(): void {\n    this.header.show();\n    this.nav.hide();\n  }\n\n  loginuser () {\n    \n    this._auth.loginUser(this.user)\n    .subscribe(\n      res => {\n\n        if(this.user.email == \"admn4928@gmail.com\" && this.user.password == \"Admin@123\"){\n          localStorage.setItem('token', res.token);\n        }\n          this._router.navigate(['/adminhome/dashboard']);\n      },\n      err => {\n        console.log(err);\n        alert('Invalid login credentials')\n        this._router.navigate(['/login'])\n      }\n    ) \n  }\n}","<div class=\"login\">\n    <h2 class=\"login-header\">\n        LogIn\n    </h2>\n    <form class=\"form col-md-6\" class=\"login-container\" #userlogin=\"ngForm\" (ngSubmit)=\"loginuser()\">\n        <p>\n            <input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" id=\"email\" [(ngModel)]=\"user.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" placeholder=\"email@example.com\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label><br>\n        </p>\n        <p>\n            <input type=\"password\" name=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" id=\"inputpassword\" placeholder=\"Password\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$\" required />\n            <label for=\"error\" class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Invalid Password</label><br>\n        </p>\n        <p>\n            <center><button [disabled]=\"userlogin.form.invalid\">Submit</button></center>\n        </p>\n        <p>\n            <center><a routerLink=\"/signup\">New User</a></center>\n        </p>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentserviceService } from '../studentservice.service';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  studentItem= {\n    fname:'',\n    age:'',\n    address:'',\n    district:'',\n    email:'',\n    phno:'',\n    dob:'',\n    gender:'',\n    quali:'',\n    poy:'',\n    skill:'',\n    wstatus:'',\n    techtrain:'',\n    year:'',\n    course:'',\n    photo:''}\n  \n\n  constructor(private router:Router,private studentService:StudentserviceService) { }\n\n  ngOnInit(): void {\n    let studentId = localStorage.getItem(\"editStudentId\");\n    this.studentService.getStudent(studentId).subscribe((data:any)=>{\n    this.studentItem=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editStudent()\n  {    \n    this.studentService.editStudent(this.studentItem);   \n    alert(\"Success\");\n    this.router.navigate(['/adminhome/students']);\n  }\n\n}\n","<div class=\"heading\"><h1>Update Student Details</h1></div><br>\n<div class=\"container bg-light\">\n    <div class=\"studentform\">\n    <form class=\"form col-md-12\"#userenrollmentform=\"ngForm\" (ngSubmit)=\"editStudent()\"> \n        <div class=\"container\">\n            <div class=\"col\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Full Name<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"fname\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"studentItem.fname\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\">Invalid Format</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Age<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" name=\"age\" id=\"age\" #age=\"ngModel\" [(ngModel)]=\"studentItem.age\" pattern=\"^\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"age.touched && age.invalid\" >Invalid Age</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputAddress\">Address<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\" #address=\"ngModel\" [(ngModel)]=\"studentItem.address\" pattern=\"^[a-zA-Z0-9\\s,/'-]*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"address.touched && address.invalid\" >Invalid Address</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">District<span style=\"color:red\">*</span></label>\n                        <select id=\"district\" name= \"district\" class=\"form-control\" #district=\"ngModel\" [(ngModel)]=\"studentItem.district\" required>\n                            <option selected>Choose</option>\n                            <option>Alappuzha</option>\n                            <option>Ernakulam</option>\n                            <option>Idukki</option>\n                            <option>Kannur</option>\n                            <option>Kasargod</option>\n                            <option>Kollam</option>\n                            <option>Kottayam</option>\n                            <option>Kozhikode</option>\n                            <option>Malappuram</option>\n                            <option>Palakkad</option>\n                            <option>Pathanamthitta</option>\n                            <option>Thiruvananthapuram</option>\n                            <option>Thrissur</option>\n                            <option>Wayanad</option>\n                        </select>\n                    </div>\n                </div><br>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"inputEmail4\">Email<span style=\"color:red\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" placeholder=\"enter your registered email-id\" #email=\"ngModel\" [(ngModel)]=\"studentItem.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Mobile No:<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"phno\" name=\"phno\" #phno=\"ngModel\" [(ngModel)]=\"studentItem.phno\" pattern=\"^([0-9]{3})[-. ]?([0-9]{3})[-. ]?([0-9]{4})$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"phno.touched && phno.invalid\" >Invalid Phone number</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Date of Birth<span style=\"color:red\">*</span></label>\n                        <input type=\"date\" class=\"form-control\" id=\"dob\" name=\"dob\" #dob=\"ngModel\" [(ngModel)]=\"studentItem.dob\" required>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Gender<span style=\"color:red\">*</span></label>\n                        <select id=\"gender\" name=\"gender\" class=\"form-control\" #gender=\"ngModel\" [(ngModel)]=\"studentItem.gender\" required>\n                            <option selected>Choose</option>\n                            <option>Male</option>\n                            <option>Female</option>\n                            <option>Other</option>\n                        </select>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Highest Qualification<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"quali\" name=\"quali\"  #quali=\"ngModel\" [(ngModel)]=\"studentItem.quali\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Pass out Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"poy\" name=\"poy\"  #poy=\"ngModel\" [(ngModel)]=\"studentItem.poy\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"poy.touched && poy.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Skill Set<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"skill\" name=\"skill\"  #skill=\"ngModel\" [(ngModel)]=\"studentItem.skill\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"skill.touched && skill.invalid\" >Invalid</label>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Employment Status<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"wstatus\" name=\"wstatus\"  #wstatus=\"ngModel\" [(ngModel)]=\"studentItem.wstatus\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"wstatus.touched && wstatus.invalid\" >Invalid</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Technology Training<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"techtrain\" name=\"techtrain\" #techtrain=\"ngModel\" [(ngModel)]=\"studentItem.techtrain\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"techtrain.touched && techtrain.invalid\" >Invalid</label><br>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Year<span style=\"color:red\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" id=\"year\" name=\"year\" #year=\"ngModel\" [(ngModel)]=\"studentItem.year\" pattern=\"^(19|20)\\d{2}$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"year.touched && year.invalid\" >Invalid</label>\n                    </div>\n                    <br>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"\">Course<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"course\" name=\"course\" #course=\"ngModel\" [(ngModel)]=\"studentItem.course\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"course.touched && course.invalid\" >Invalid Course</label>\n                    </div>\n                </div><br>\n                <div class=\"row\">\n                    <label for=\"\">Photo<span style=\"color:red\">*</span></label>\n                    <input type=\"file\" name=\"photo\" id=\"photo\" #photo=\"ngModel\" [(ngModel)]=\"studentItem.photo\" accept= \"image/*\" required>\n                </div><br>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userenrollmentform.form.invalid\">Submit</button><br>\n            </div>\n        </div>\n    </form><br>\n</div>\n</div>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\nimport { EmployerService } from '../employer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-newemployer',\n  templateUrl: './newemployer.component.html',\n  styleUrls: ['./newemployer.component.css']\n})\nexport class NewemployerComponent implements OnInit {\n  constructor(private employerService: EmployerService,private router: Router) { }\n  employerItem= {\n    fname:'',\n    email:'',\n    quali:'',\n    }\n  ngOnInit() {\n  }\n  AddEmployer()\n  {    \n    this.employerService.newEmployer(this.employerItem);\n    console.log(\"Called\");    \n    alert(\"Success\");\n    this.router.navigate(['adminhome/employers']);\n  }\n}\n","<!--<div class='card'>\n    <form (ngSubmit)=\"AddEmployee()\">\n<div class='card-header'>\n ADD EMPLOYEE\n</div>\n<div class='card-body'>            \n  <div class='table-responsive'>\n    <table class='table'>       \n    \n      <tbody>  \n        <tr>\n                <td><label>name</label></td>\n                <td><input type=\"text\" name=\"e_name\" [(ngModel)]=\"employeeItem.name\"/></td>                  \n              </tr>  \n              <tr>\n                <td> <label>email</label></td>\n                <td><input type=\"text\" name=\"e_email\" [(ngModel)]=\"employeeItem.email\"/></td>                  \n              </tr>  \n              <tr>\n                <td> <label>qualification</label></td>\n                <td><input type=\"text\" name=\"e_qualification\" [(ngModel)]=\"employeeItem.qualification\"/></td>                  \n              </tr>  \n              \n              <tr>\n                \n                <td><input type=\"submit\" value=\"Submit\" /></td>                  \n              </tr>             \n      </tbody>\n    </table>\n  </div>\n</div>\n</form>\n</div>-->\n\n<div class=\"heading\" ><h2>Add Employee Details</h2></div><br>\n<div class=\"container bg-light\">\n    <div class=\"employerform\">\n    <form class=\"form col-md-12\"#useremployerform=\"ngForm\" (ngSubmit)=\"AddEmployer()\"> \n        <div class=\"container\">\n            <div class=\"col\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"\">Name<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"fname\" id=\"fname\" #fname=\"ngModel\" [(ngModel)]=\"employerItem.fname\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"fname.touched && fname.invalid\">Invalid Format</label>\n                        </div>\n                        <div class=\"form-group col-md-12\">\n                          <label for=\"inputEmail4\">Email<span style=\"color:red\">*</span></label>\n                          <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\"  #email=\"ngModel\" [(ngModel)]=\"employerItem.email\" pattern=\"^([A-Za-z0-9\\.-]+)@([A-Za-z0-9\\-]+)[.]([a-z]{2,3})(.[a-z]{2,3})?$\" required>\n                          <label for=\"error\" class=\"text-danger\" *ngIf=\"email.touched && email.invalid\" >Invalid Email</label>\n                      </div>         \n                      <div class=\"form-group col-md-12\">\n                        <label for=\"\">Qualification<span style=\"color:red\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" id=\"quali\" name=\"quali\"  #quali=\"ngModel\" [(ngModel)]=\"employerItem.quali\" pattern=\"^[A-Z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*$\" required>\n                        <label for=\"error\" class=\"text-danger\" *ngIf=\"quali.touched && quali.invalid\" >Invalid</label><br>\n                    </div> \n                    </div>\n                    <button type=\"submit\" class=\"btn btn-warning\" style=\"size:10vh;\" [disabled]=\"useremployerform.form.invalid\">Submit</button><br>\n                    \n                  \n                  </div>\n                  </div>\n"],"sourceRoot":"webpack:///"}